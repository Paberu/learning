7.1 flag - go_on
// если flag принимает значение True, то выполнение цикла перебора продолжается; if not go_on: break несёт больше смысла.

is_subscript_channel
//в объёмной функции встречается сравнение if channel in self.channels.keys() дважды, т.к. два цикла for идут один за другим.
Лучше задать булеву переменную, на случай, если способ проверки изменится

is_video
//из старого фитнес-приложения, разработку которого прикрыли. Эти две переменные лучше ввести для сохранения результата проверки типа
"ок, файл прошёл фильтр, теперь разберёмся, картинка это или видео, и выберем способ сохранения и постобработки на сервере", потому что
if длиной более 100 символов портит читабельность кода. Впрочем, мне кажется, что вместо сохранения результата проверки в переменные вида:
is_video
is_audio
и т.п. лучше заменить на соответствующие методы

is_picture
//оттуда же

while node is not None (и в теле цикла break) - while node is not None and not deleted (и в теле цикла deleted = True)
//не уверен, что так лучше, но так мы избавляемся от break, который некоторые опытные товарищи называют замаскированным goto и советуют
избегать. Из функции delete класса OrderedList.

7.2.
deleted (или is_deleted) 
//можно ввести переменную deleted в тело функции delete класса OrderedList.

error
//функция get_videos_with_youtube_dl программы, скачивающей каналы с Youtube на локальный диск, не возвращает ничего, а могла бы
возвращать признак наличия ошибок в процессе скачивания.

// подозреваю, что буду просить переноса этого курсана конец серии курсов, очень мало накопилось личного кода, тяжело идёт поиск подходящего кейса

7.3. media_id
// из стандартной формы пришёл набор файлов. Если вместо files[i] использовать files[media_id], становится понятнее, с какими файлами работаем.

letter
//из цикла for letter in key, посимвольно разбираем ключевую строку

7.4. current_node - previous_node
// не вполне антонимы, но всё же - текущий узел и предыдущий узел

self.head - self.tail
// из класса LinkedList, начало и конец связного списка

max_lost_period - min_lost_period
// наибольшее и наименьшее время, когда "потерянные" клиенты нашего антивирусного сервера перестали с ним связываться

7.5.  if self.stack2.size() == 0: return True
        return False
//замениить на:
	return self.stack2.size() == 0
// нет временной переменной, но есть лишние return

	temp_word = sorted(word)
    temp_word.remove(the_letter)
    output = the_letter + ''.join(temp_word)
// заменить на:
    output = the_letter + ''.join(sorted(word).remove(the_letter))

